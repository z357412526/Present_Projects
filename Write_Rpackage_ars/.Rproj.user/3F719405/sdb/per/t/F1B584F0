{
    "contents" : "main <- function(N){\n  check_pval <- function(output, fun.name){\n    if(output$p.value <= 0.05){\n      print(paste(\"did NOT create a good sample with\", fun.name,\n                  \", pvalue=\", round(output$p.value, 3)))\n    } else {\n      print(paste(\"passed with\", fun.name))\n    }\n  }\n  \n  test_dist <- function(FUN, fun.name, a, b, N, rFUN, ...){\n    out <- try(ars(N=N, f=FUN, a=a, b=b),\n               silent=TRUE)\n    if(inherits(out, \"try-error\")) {\n      print(paste(\"fails to evaluate with\", fun.name))\n    } else {\n      y1 <- rFUN(N,...)\n      test <- ks.test(out$sample, y1)\n      check_pval(test, fun.name)\n    }\n  }\n  \n  ## *******************************************************\n  ## i. Standard Normal Distribution\n  fun.name <- \"normal\"\n  dnor <- function(x){\n    return((1/(sqrt(2*pi)))*exp(-(x^2)/2))\n  }\n  test_dist(FUN=dnor,\n            fun.name=fun.name,\n            a=-10, b=10, N=N, rFUN=rnorm)\n  ## *******************************************************\n  ## ii. Laplace Distribution\n  fun.name <- \"laplace\"\n  dlaplace <- function(x, m = 0, s = 1){\n    return(exp(-abs(x-m)/s)/(2*s))\n  }\n  rlaplace <- function(N){\n    U <- runif(N, -0.5, 0.5)\n    y <- sign(U)*rexp(N, 1)\n    return(y)\n  }\n  \n  test_dist(FUN=dlaplace,\n            fun.name=fun.name,\n            a=-10, b=10, N=N, rFUN=rlaplace)\n  ## *******************************************************\n  ## iii. Logistic Distribution\n  fun.name <- \"logistic\"\n  dlogistic <- function(x){\n    return(exp(x)/(1+exp(x))^2)\n  }\n  test_dist(FUN=dlogistic,\n            fun.name=fun.name,\n            a=-10, b=10, N=N, rFUN=rlogis)\n  \n  ## *******************************************************\n  ## iv. Gamma Distribution (chi square)\n  fun.name <- \"gamma\"\n  dgam <- function(x, theta=2, k=2){\n    return((1/(gamma(k)*theta^k))*(x^(k-1))*exp(-x/theta))\n  }\n  test_dist(FUN=dgam,\n            fun.name=fun.name,\n            a=0.001, b=1000, N=N, rFUN=rgamma,\n            shape = 2, scale = 2)\n  \n  ## *******************************************************\n  ## v.  uniform Distribution (chi square)\n  fun.name <- \"uniform\"\n  dun <- function(x){\n    return(dunif(x, min=0, max=1))\n  }\n  test_dist(FUN=dun,\n            fun.name=fun.name,\n            a=0, b=1, N=N, rFUN=runif)\n  \n  ## *******************************************************\n  ## vi.  beta\n  fun.name <- \"beta\"\n  dbet <- function(x){\n    return(dbeta(x, shape1 = 3, shape2 = 2, ncp = 0, log = FALSE))\n  }\n  test_dist(FUN=dbet,\n            fun.name=fun.name,\n            a=0.01, b=0.99, N=N, rFUN=rbeta,\n            shape1=3, shape2=2)\n  \n  ## *******************************************************\n  ## vii. non-concave distribution\n  fun.name <- \"non-log concave exp(x^2)\"\n  de <- function(x){\n    return(exp(x^2))\n  }\n  test_dist(FUN=de,\n            fun.name=fun.name,\n            a=-1, b=1, N=N, rFUN=NA)\n}\n\nmain(1000)",
    "created" : 1450317872536.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "678663396",
    "id" : "F1B584F0",
    "lastKnownWriteTime" : 1450318499,
    "path" : "~/final_proj243/ars/tests/testthat/test-main.R",
    "project_path" : "tests/testthat/test-main.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}